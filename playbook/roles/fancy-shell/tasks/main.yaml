- name: install necessary packages
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  apt:
    pkg:
      - curl
      - git
      - build-essential
      - zsh
      - tmux
      - rsync
      - unzip
      - cloc
      - tree
      - htop
      - telnet
      - net-tools
      - silversearcher-ag
      - fd-find

- name: make sure we have folder to store vim-plug
  file:
    path: ~/.local/share/nvim/site/autoload
    state: directory

- name: install vim-plug plugin
  uri:
    status_code: [304,200]
    url: "{{ vimplug_url }}"
    dest: ~/.local/share/nvim/site/autoload/plug.vim

- name: check if oh-my-zsh folder exists
  stat:
    path: ~/.oh-my-zsh
  register: zsh_stat

- name: get oh-my-zsh install script
  when: zsh_stat.stat.exists == false
  uri:
    status_code: [304,200]
    url: "{{ ohmyzsh_url }}"
    dest: /tmp/install-zsh.sh
    mode: 0755

- name: install oh-my-zsh
  when: zsh_stat.stat.exists == false
  shell: /tmp/install-zsh.sh

- name: change zsh file content
  replace:
    dest: ~/.zshrc
    regexp: ^\s*plugins=(\(.*\))\s*$
    replace: plugins=(git vi-mode)

- name: install tpm
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: ~/.tmux/plugins/tpm
    update: "{{ update }}"

- name: download fzf
  git:
    repo: https://github.com/junegunn/fzf
    dest: ~/.fzf
    update: "{{ update }}"

- name: install fzf
  environment:
   ALL_PROXY: socks5h://bridge.cnworkshop.xyz:1280
  command: bash ~/.fzf/install

- name: create tmux shimming conf
  lineinfile:
    state: present
    line: source-file ~/.dotfile/tmux/tmux.conf
    dest: ~/.tmux.conf
    create: yes

- name: take care of nvim settings
  file:
    path: ~/.config/nvim
    state: directory


- name: create nvim shimming conf
  lineinfile:
    state: present
    line: source ~/.dotfile/vim/vimrc
    dest: ~/.config/nvim/init.vim
    create: yes

- name: create coc shimming conf
  file:
    src: ~/.dotfile/vim/coc-settings.json
    dest: ~/.config/nvim/coc-settings.json
    state: link

- name: create vim shimming conf
  lineinfile:
    state: present
    line: source ~/.dotfile/vim/vimrc
    dest: ~/.vimrc
    create: yes

- name: append extra config to zshrc
  blockinfile:
    state: present
    marker: '#extra-zsh-config'
    block: |
      source ~/.dotfile/zsh/alias.zsh
      source ~/.dotfile/zsh/patch.zsh
    dest: ~/.zshrc

- name: Check is nvim installed
  shell: command -v  nvim >/dev/null 2>&1
  register: is_nvim_exists
  ignore_errors: yes

- name: Check is nvim installed
  stat:
    path: /tmp/nvim-linux64.tar.gz
  register: nvim_down_stat
  ignore_errors: yes

- name: download nvim
  when:
    - ansible_system == 'Linux'
    - is_nvim_exists.rc != 0
    - not nvim_down_stat.stat.exists
  get_url:
    dest: /tmp/nvim-linux64.tar.gz
    url: "{{ nvim_download_url }}"

- name: unarchive nvim
  become: true
  when:
    - ansible_system  == 'Linux'
    - is_nvim_exists.rc != 0
  unarchive:
    src: /tmp/nvim-linux64.tar.gz
    dest: /tmp/
    remote_src: true

- name: install nvim
  become: true
  when:
    - ansible_system  == 'Linux'
    - is_nvim_exists.rc != 0
  synchronize:
    src: /tmp/nvim-linux64/
    dest: /usr/local/

- name: link nvim
  become: true
  when:
    - ansible_system  == 'Linux'
    - is_nvim_exists.rc != 0
  file:
    src: /usr/local/bin/nvim
    dest: /usr/bin/nvim
    state: link
