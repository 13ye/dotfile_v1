#- name: check if golang bin exists
#  command: go version
#  register: go_exist
#  ignore_errors: yes

- name: check if golang archive downloaded
  stat: 
    path: /usr/local/go
  register: go_exist

- name: make sure golang_archive has directory
  file:
    path: "{{ go_destdir }}"
    state: directory

- name: check if golang archive already downloaded
  stat: 
    path: "{{ go_destdir }}{{ go_artifact }}"
  register: goarchive_exist

- name: download golang archive
  when: go_exist.stat.exists == false and goarchive_exist.stat.exists == false
  uri:
    url: "{{ go_download_url }}"
    dest: "{{ go_destdir }}"

- name: make sure directory to unarchive exists
  file:
    path: /usr/local/
    state: directory

- name: unarchive the golang file downloaded
  when: go_exist.stat.exists == false 
  unarchive: 
    src: "{{ go_destdir }}{{ go_artifact }}"
    dest: /usr/local/

- name: set go_var gopath goproxy goroot
  lineinfile:
    state: present 
    line: source ~/.dotfile/zsh/golang.env
    dest: ~/.zshrc
    create: yes

